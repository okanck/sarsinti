services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: sarsinti-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: sarsinti123
      MONGO_INITDB_DATABASE: sarsinti
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - sarsinti-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sarsinti-backend
    restart: unless-stopped
    environment:
      NODE_ENV: "development"
      PORT: "3000"
      MONGODB_URI: "mongodb://admin:sarsinti123@mongodb:27017/sarsinti?authSource=admin"
      AFAD_API_URL: "https://deprem.afad.gov.tr/apiv2/event/filter"
      AFAD_API_TIMEOUT: "30000"
      ETL_BATCH_SIZE: "1000"
      ETL_START_DATE: "1960-01-01"
      ETL_INTERVAL_MINUTES: "5"
      ADMIN_SECRET: "sarsinti-admin-2025"
      CORS_ORIGIN: "http://localhost:3000,http://localhost:5173"
    ports:
      - "3000:3000"
    volumes:
      # Hot reload i√ßin source code'u mount et
      - ./backend/src:/app/src:ro
      - ./backend/package.json:/app/package.json:ro
      # node_modules'u container'da tut (override etme)
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - sarsinti-network
    command: npm run dev

  # MongoDB Express (Database GUI - Opsiyonel)
  mongo-express:
    image: mongo-express:latest
    container_name: sarsinti-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: sarsinti123
      ME_CONFIG_MONGODB_URL: mongodb://admin:sarsinti123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: sarsinti123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - sarsinti-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  sarsinti-network:
    driver: bridge
